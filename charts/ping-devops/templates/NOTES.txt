{{ include "pinglib.notes.header" . }}
{{- $format := "%-1.1s %-21.21s %-11.11s %5.5s %5.5s %5.5s %5.5s %3.3s" }}
#
#  {{ printf $format " " "       Product       " " Workload  " "cpu-R" "cpu-L" "mem-R" "mem-L" "Ing"}}
#  {{ printf $format " " "---------------------" "-----------" "-----"  "-----"  "-----"  "-----" "-----"}}
#  {{ printf $format " " "global" "" (toString $.Values.global.container.resources.requests.cpu) (toString $.Values.global.container.resources.limits.cpu) (toString $.Values.global.container.resources.requests.memory) (toString $.Values.global.container.resources.limits.memory) (ternary " √ " "" $.Values.global.ingress.enabled) }}
#
{{- $products := list "pingaccess-admin" "pingaccess-engine" "pingdataconsole" "pingdatagovernance" "pingdatagovernancepap" "pingdatasync" "pingdelegator" "pingdirectory" "pingfederate-admin" "pingfederate-engine" "---" "ldap-sdk-tools" "pd-replication-timing" }}
{{- range $prodName := $products }}
{{- if eq $prodName "---" }}
#
{{- end }}
{{- with (index $.Values $prodName)}}
    {{- $prodEnabled := ternary "√" "" .enabled }}
    {{- $workload := ternary (.workload.type | lower) "" .enabled }}
    {{- $cpur := ternary (toString .container.resources.requests.cpu) "" .enabled }}
    {{- $cpul := ternary (toString .container.resources.limits.cpu) "" .enabled }}
    {{- $memr := ternary (toString .container.resources.requests.memory) "" .enabled }}
    {{- $meml := ternary (toString .container.resources.limits.memory) "" .enabled }}
    {{- $ingEnabled := .enabled | ternary (ternary " √ " "" .ingress.enabled) "" }}
#  {{ printf $format $prodEnabled $prodName $workload $cpur $cpul $memr $meml $ingEnabled  }}
{{- end }}
{{- end }}
#
{{ include "pinglib.notes.footer" . }}
